<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="3440" d:DesignHeight="1440"
        x:DataType="vm:OverlayEditorWindowViewModel"
        Background="Transparent"
        ExtendClientAreaToDecorationsHint="True"
        xmlns:local="using:UltrawideOverlays"
        xmlns:converter="using:UltrawideOverlays.Converters"
        xmlns:vm="using:UltrawideOverlays.ViewModels"
        xmlns:cc="using:UltrawideOverlays.CustomControls"
        xmlns:locators="using:UltrawideOverlays.Locators"
        x:Class="UltrawideOverlays.Views.OverlayEditorWindowView"
        DragDrop.AllowDrop="True"
        CanResize="False"
        Title="OverlayEditorWindowView">
    
    <Design.DataContext><vm:OverlayEditorWindowViewModel/></Design.DataContext>

    <Window.Resources>
        <converter:NumberToStringConverter x:Key="numberToStringConverter"/>
    </Window.Resources>

    <Window.Styles>
        <Style Selector="Label">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryFontColor}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style Selector="StackPanel">
            <Setter Property="Spacing" Value="10"/>
        </Style>
    </Window.Styles>

    <cc:DragGridControl Color="{Binding PreviewColor}" Preview="{Binding PreviewEnabled}" GridOpacity="{Binding PreviewOpacity}" GridSize="{Binding PreviewSize}" x:Name="MainDragGrid">
        <Border x:Name="PropertiesBorder" cc:DragPanel.Position="1320, 420" cc:DragPanel.SnapToGrid="false" ZIndex="99" BorderThickness="0, 20, 0, 0" Margin="0, -10, 0 ,0" Background="{DynamicResource PrimaryAccent}">
            <Grid ColumnDefinitions="*, *, *" RowDefinitions="50, *, 50" Width="800" Height="600" Background="{DynamicResource SecondaryColor}">
    
                <!-- Column 0: Images-->
                <RelativePanel>
                    <Label x:Name="ImageLabel" RelativePanel.AlignVerticalCenterWithPanel="True" RelativePanel.AlignHorizontalCenterWithPanel="True" >Images</Label>
                    <Button Width="32" Height="32" RelativePanel.LeftOf="DeleteButton"  RelativePanel.AlignVerticalCenterWithPanel="True" Click="DuplicateButton_Click">
                        <Image Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image.Source>
                                <SvgImage Source="{StaticResource CopyIcon}"/>
                            </Image.Source>
                        </Image>
                    </Button>
                    <Button x:Name="DeleteButton" Width="32" Height="32" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True" Click="DeleteButton_Click">
                        <Image Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image.Source>
                                <SvgImage Source="{StaticResource DeleteIcon}"/>
                            </Image.Source>
                        </Image>
                    </Button>
                </RelativePanel>
                
                <ListBox x:Name="Images_ListBox" Background="Transparent" Grid.Row="1" ItemsSource="{Binding Images}" BorderBrush="Black" BorderThickness="1" SelectedItem="{Binding Selected, Mode=TwoWay}" AutoScrollToSelectedItem="True">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image RenderOptions.BitmapInterpolationMode="LowQuality" Source="{Binding ImagePath, Converter={x:Static converter:PathToBitmapConverter.Converter}}"/>
                                <TextBox BorderBrush="Transparent" Background="{DynamicResource PrimaryBackground}" Height="20" Text="{Binding ImageName, Mode=TwoWay}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!-- Column 1: Grid Properties-->
                <Label Grid.Column="1" DockPanel.Dock="Top" VerticalAlignment="Center" HorizontalAlignment="Center">Grid Properties</Label>
                <StackPanel Grid.Row="1" Grid.Column="1" Spacing="10" VerticalAlignment="Stretch" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                        <Label>Visible Grid</Label>
                        <CheckBox x:Name="GridVisible_CheckBox" IsChecked="{Binding PreviewEnabled, Mode=TwoWay}" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Color</Label>
                        <ColorPicker x:Name="GridColor_ColorPicker" Color="{Binding PreviewColor, Mode=TwoWay}"></ColorPicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Size</Label>
                        <TextBox x:Name="GridSize_TextBox" HorizontalContentAlignment="Center" Watermark="50" Text="{Binding PreviewSize, Converter={StaticResource numberToStringConverter}, Mode=TwoWay}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Opacity</Label>
                        <Slider x:Name="GridOpacity_Slider" HorizontalAlignment="Stretch" Width="100" Minimum="0" Maximum="1" Value="{Binding PreviewOpacity, Mode=TwoWay}"/>
                        <Label Content="{Binding PreviewOpacity, Converter={x:Static converter:RoundedNumberToStringConverter.Converter}}"></Label>
                    </StackPanel>
                    <Button Click="AddClippingMaskButton_Click">Add Clipping Mask</Button>
                </StackPanel>

                <!-- Column 2: Image Properties-->
                <Label Grid.Column="2" DockPanel.Dock="Top" VerticalAlignment="Center" HorizontalAlignment="Center">Properties</Label>
                <StackPanel Grid.Row="1" Grid.Column="2" Spacing="10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Horizontal">
                        <Label>Position</Label>
                        <TextBox Text="{Binding Selected.ImageProperties.PositionX, Converter={StaticResource numberToStringConverter}, Mode=TwoWay}"></TextBox>
                        <Label>,</Label>
                        <TextBox Text="{Binding Selected.ImageProperties.PositionY, Converter={StaticResource numberToStringConverter}, Mode=TwoWay}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Size</Label>
                        <TextBox Text="{Binding Selected.ImageProperties.Width, Converter={StaticResource numberToStringConverter}, Mode=TwoWay}"></TextBox>
                        <Label>x</Label>
                        <TextBox Text="{Binding Selected.ImageProperties.Height, Converter={StaticResource numberToStringConverter}, Mode=TwoWay}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Scale</Label>
                        <TextBox Text="{Binding Selected.ImageProperties.Scale, Converter={StaticResource numberToStringConverter}, Mode=TwoWay}"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>H-Mirrored</Label>
                        <CheckBox IsChecked="{Binding Selected.ImageProperties.IsHMirrored, Mode=TwoWay}"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>V-Mirrored</Label>
                        <CheckBox IsChecked="{Binding Selected.ImageProperties.IsVMirrored, Mode=TwoWay}"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Opacity</Label>
                        <Slider x:Name="ImageOpacity_Slider" Value="{Binding Selected.ImageProperties.Opacity, Mode=TwoWay}" HorizontalAlignment="Stretch" Width="100" Minimum="0" Maximum="1" />
                        <Label Content="{Binding Selected.ImageProperties.Opacity, Converter={x:Static converter:RoundedNumberToStringConverter.Converter}}"></Label>
                    </StackPanel>
                    <Label HorizontalAlignment="Center">Extra</Label>
                    <StackPanel Orientation="Horizontal">
                        <Label>Visible</Label>
                        <CheckBox IsChecked="{Binding Selected.ImageProperties.IsVisible, Mode=TwoWay}"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Draggable</Label>
                        <CheckBox IsChecked="{Binding Selected.ImageProperties.IsDraggable, Mode=TwoWay}"></CheckBox>
                    </StackPanel>
                </StackPanel>

                <!-- Grid Decorations -->
                <StackPanel Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                    <TextBox x:Name="OverlayNameBox" Height="20" Width="120" Watermark="Overlay Name" VerticalContentAlignment="Bottom" HorizontalContentAlignment="Right" Text="{Binding OverlayName, Mode=TwoWay}"></TextBox>
                    <Button x:Name="AcceptButton" Click="AcceptButton_Click">Accept</Button>
                    <Button x:Name="CancelButton" Click="CancelButton_Click">Cancel</Button>
                </StackPanel>
            </Grid>
        </Border>
    </cc:DragGridControl>

</Window>
